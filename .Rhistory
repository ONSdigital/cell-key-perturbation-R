warning(paste0("The ranges of record keys and cell keys appear to be different",'\n',
"The maximum record key is ",max_rkey,", whereas the maximum cell key is ",max_ckey),'\n',
"Please check you are using the appropriate ptable for this data")
}
#calculate cell keys
cellkeys<-setDT(data)[,.(ckey = sum(get(record_key_arg))%%(max_ckey+1)), keyby = c(geog,tab_vars)]
aggregated_table<-merge(aggregated_table,cellkeys,by=c(geog,tab_vars),all.x=TRUE)
#calculate pcv
aggregated_table$pcv<-as.integer(((aggregated_table$pre_sdc_count-1)%%250)+501)
setDT(aggregated_table)[pre_sdc_count<=750, pcv:=pre_sdc_count,]
#merge on ptable
aggregated_table<-merge(aggregated_table,ptable,by=c("ckey","pcv"),sort=FALSE,all.x=TRUE)
setDT(aggregated_table)[,count:=pre_sdc_count+pvalue,]
#replacing NAs in cellkey for zero cells
aggregated_table[pre_sdc_count==0,ckey:=0]
#setting pvalue to be zero for zero cells
aggregated_table[pre_sdc_count==0,pvalue:=0]
#setting count to be zero for zero cells
aggregated_table[pre_sdc_count==0,count:=0]
return(aggregated_table)
}
result <- create_perturbed_table(micro, geog, tab_vars, record_key, ptable_10_5)
micro <- fread("data/micro.csv")
result <- create_perturbed_table(micro, geog, tab_vars, record_key, ptable_10_5)
View(result)
View(result)
usethis::use_data(ptable_10_5_rule)
usethis::use_data(ptable_10_5_rule.csv)
devtools::load_all(".")
library(cellkeyperturbation)
devtools::load_all(".")
use data()
library(cellkeyperturbation)
devtools::load_all(".")
library(cellkeyperturbation)
use data()
use_data()
data()
devtools::load_all(".")
help(cellkeyperturbation)
??cellkeyperturbation
create_perturbed_table(data = micro,record_key = "record_key",geog = c(),tab_vars = c("var1","var5","var8"),ptable = ptable_10_5)
micro <- fread("data/micro.csv")
ptable_10_5 <- fread("data/ptable_10_5_rule.csv")
create_perturbed_table(data = micro,record_key = "record_key",geog = c(),tab_vars = c("var1","var5","var8"),ptable = ptable_10_5)
str(micro)
library(devtools)
build()
??cellkeyperturbation
create_perturbed_table(data = micro,record_key = "record_key",geog = c(),tab_vars = c("var1","var5","var8"),ptable = ptable_10_5)
library(cellkeyperturbation)
devtools::load_all(".")
library(cellkeyperturbation)
??cellkeyperturbation
help(cellkeyperturbation)
perturbed_table <-create_perturbed_table(data = micro,
record_key = "record_key",
geog = c(),
tab_vars = c("var1","var5","var8"),
ptable = ptable_10_5)
micro
ptable_10_5_rule
perturbed_table <-create_perturbed_table(data = micro,
record_key = "record_key",
geog = c(),
tab_vars = c("var1","var5","var8"),
ptable = ptable_10_5)
library(cellkeyperturbation)
devtools::load_all(".")
??cellkeyperturbation
library(cellkeyperturbation)
devtools::load_all(".")
??cellkeyperturbation
library(cellkeyperturbation)
devtools::load_all(".")
??cellkeyperturbation
library(cellkeyperturbation)
??cellkeyperturbation
perturbed_table <-create_perturbed_table(data = micro,
record_key_arg = "record_key",
geog = c(),
tab_vars = c("var1","var5","var8"),
ptable = ptable_10_5)
library(cellkeyperturbation)
??cellkeyperturbation
library(cellkeyperturbation)
library(cellkeyperturbation)
??cellkeyperturbation
perturbed_table <-create_perturbed_table(data = micro,
record_key_arg = "record_key",
geog = c(),
tab_vars = c("var1","var5","var8"),
ptable = ptable_10_5)
library(data.table)
perturbed_table <-create_perturbed_table(data = micro,
record_key_arg = "record_key",
geog = c(),
tab_vars = c("var1","var5","var8"),
ptable = ptable_10_5)
str(micro)
micro <- fread("data/micro.csv")
ptable_10_5 <- fread("data/ptable_10_5_rule.csv")
perturbed_table <-create_perturbed_table(data = micro,
record_key_arg = "record_key",
geog = c(),
tab_vars = c("var1","var5","var8"),
ptable = ptable_10_5)
library(data.table)
#' Create a frequency table which has had cell key perturbation applied
#'
#' 'create_perturbed_table()' creates a frequency table which has had
#'  cell key perturbation applied to the counts.
#'  The perturbation adds a small amount of noise to some cells in a table,
#'  changing their values. A p-table file needs to be supplied
#'  which determines which cells are perturbed. The data needs to contain a
#'  'record key' variable which along with the ptable allows the process to be
#'  repeatable and consistent.
#'  The perturbation adds uncertainty to small values to reduce the risk of
#'  disclosure. It protects against the risk of disclosure by differencing
#'  since it cannot be determined whether a difference between two similar tables
#'  represents a real person, or is caused by the perturbation.
#'
#' @param data_table A data.table containing the data to be tabulated and perturbed
#' @param geog A string vector giving the column name in 'data' that contains the desired geography level for the frequency table
#' @param tab_vars A string vector giving the column names in 'data' of the variables to be tabulated.
#' @param record_key_arg A String containing the column name in 'data' giving the record keys required for perturbation.
#' @param ptable A data.table containing the 'ptable' file which determines when perturbation is applied.
#'
#' @return Returns a data.table giving a frequency table which has had cell key perturbation applied according to the ptable supplied.
#'
#' @examples
#' library(data.table)
#' micro <- fread("data/micro.csv")
#' ptable_10_5 <- fread("data/ptable_10_5_rule.csv")
#'
#' geog <- c("var1")
#' tab_vars <- c("var2","var3","var4")
#' record_key <-"record_key"
#'
#' perturbed_table  <- create_perturbed_table(micro, geog, tab_vars, record_key, ptable_10_5)
#'
#' perturbed_table <-create_perturbed_table(data_table = micro,
#'                                          record_key_arg = "record_key",
#'                                          geog = c(),
#'                                          tab_vars = c("var1","var5","var8"),
#'                                          ptable = ptable_10_5)
#'
#'
#' @export
create_perturbed_table=function(data_table,geog,tab_vars,record_key_arg,ptable)
{
#drop unnecessary columns
data_table=data_table[,c(geog,tab_vars,record_key_arg),with=FALSE]
#convert every column to factor, except record_key
cols <- colnames(data_table)[!(colnames(data_table) %in% record_key_arg)]
data_table[,(cols):=lapply(.SD,as.factor),.SDcols=cols]
#tabulate
#using 'table' function to get zero cells
aggregated_table<-as.data.table(table(data_table[,c(geog,tab_vars),with=FALSE]))
colnames(aggregated_table)[colnames(aggregated_table) == "N"] <- "pre_sdc_count"
#adjust for using cellkeys of 256 or other (e.g. 4095)
max_ckey<-max(ptable$ckey)
#checking the range of ckeys used in the ptable matches the range of rkeys in the data
max_rkey<-max(data_table[,get(record_key_arg)])
if(max_ckey!=max_rkey){
warning(paste0("The ranges of record keys and cell keys appear to be different",'\n',
"The maximum record key is ",max_rkey,", whereas the maximum cell key is ",max_ckey),'\n',
"Please check you are using the appropriate ptable for this data")
}
#calculate cell keys
cellkeys<-setDT(data_table)[,.(ckey = sum(get(record_key_arg))%%(max_ckey+1)), keyby = c(geog,tab_vars)]
aggregated_table<-merge(aggregated_table,cellkeys,by=c(geog,tab_vars),all.x=TRUE)
#calculate pcv
aggregated_table$pcv<-as.integer(((aggregated_table$pre_sdc_count-1)%%250)+501)
setDT(aggregated_table)[pre_sdc_count<=750, pcv:=pre_sdc_count,]
#merge on ptable
aggregated_table<-merge(aggregated_table,ptable,by=c("ckey","pcv"),sort=FALSE,all.x=TRUE)
setDT(aggregated_table)[,count:=pre_sdc_count+pvalue,]
#replacing NAs in cellkey for zero cells
aggregated_table[pre_sdc_count==0,ckey:=0]
#setting pvalue to be zero for zero cells
aggregated_table[pre_sdc_count==0,pvalue:=0]
#setting count to be zero for zero cells
aggregated_table[pre_sdc_count==0,count:=0]
return(aggregated_table)
}
perturbed_table <-create_perturbed_table(data_table = micro,
record_key_arg = "record_key",
geog = c(),
tab_vars = c("var1","var5","var8"),
ptable = ptable_10_5)
View(perturbed_table)
library(cellkeyperturbation)
library(cellkeyperturbation)
??cellkeyperturbation
devtools::load_all(".")
??cellkeyperturbation
??cellkeyperturbation
library(cellkeyperturbation)
perturbed_table <-create_perturbed_table(data_table = micro,
record_key_arg = "record_key",
geog = c(),
tab_vars = c("var1","var5","var8"),
ptable = ptable_10_5)
str(micro)
micro <- fread("data/micro.csv")
ptable_10_5 <- fread("data/ptable_10_5_rule.csv")
str(micro)
perturbed_table <-create_perturbed_table(data_table = micro,
record_key_arg = "record_key",
geog = c(),
tab_vars = c("var1","var5","var8"),
ptable = ptable_10_5)
library(cellkeyperturbation)
micro
str(micro)
str(ptable_10_5_rule)
library(cellkeyperturbation)
usethis::use_package("rlang")
library(cellkeyperturbation)
library(cellkeyperturbation)
library(cellkeyperturbation)
library(cellkeyperturbation)
library(cellkeyperturbation)
library(cellkeyperturbation)
library(cellkeyperturbation)
library(cellkeyperturbation)
library(cellkeyperturbation)
library(cellkeyperturbation)
library(cellkeyperturbation)
library(cellkeyperturbation)
library(devtools)
use_r("data")
library(cellkeyperturbation)
devtools::load_all(".")
data(ptable_10_5_rule)
ptable_10_5 <- fread("data/ptable_10_5_rule.csv")
View(ptable_10_5_rule)
ptable_10_5 <- fread("data/ptable_10_5_rule.csv")
use_data(ptable_10_5)
data(ptable_10_5)
devtools::load_all(".")
data(ptable_10_5)
?ptable_10_5
?ptable_10_5
View(ptable_10_5)
data(ptable_10_5)
str(ptable_10_5)
micro <- fread("data/micro.csv")
use_data(micro)
devtools::load_all(".")
?ptable_10_5
?micro
library(cellkeyperturbation)
library(cellkeyperturbation)
devtools::load_all(".")
devtools::load_all(".")
data("ptable_10_5")
data("micro")
devtools::load_all(".")
?micro
?ptable_10_5
?micro
devtools::load_all(".")
?micro
devtools::load_all(".")
?micro
library(cellkeyperturbation)
library(cellkeyperturbation)
devtools::load_all(".")
use_mit_license()
devtools::load_all(".")
use_mit_license()
library(usethis)
use_mit_license()
devtools::load_all(".")
library(cellkeyperturbation)
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
?cellkeyperturbation
??cellkeyperturbation
library(cellkeyperturbation)
devtools::load_all(".")
??cellkeyperturbation
library(cellkeyperturbation)
??cellkeyperturbation
devtools::load_all(".")
??cellkeyperturbation
library(cellkeyperturbation)
devtools::load_all(".")
??cellkeyperturbation
??cellkeyperturbation
??cellkeyperturbation
library(cellkeyperturbation)
perturbed_table <-create_perturbed_table(data = micro,
record_key = "record_key",
geog = c(),
tab_vars = c("var1","var5","var8"),
ptable = ptable_10_5)
View(perturbed_table)
View(perturbed_table)
geog <- c("var1")
tab_vars <- c("var5","var8")
record_key_arg <-"record_key"
perturbed_table  <- create_perturbed_table(micro, geog, tab_vars, record_key_arg, ptable_10_5)
perturbed_table2  <- create_perturbed_table(micro, geog, tab_vars, record_key_arg, ptable_10_5)
devtools::load_all(".")
?cellkeyperturbation
devtools::load_all(".")
?cellkeyperturbation
devtools::load_all(".")
?micro
?ptable_10_5
?cellkeyperturbation
??cellkeyperturbation
devtools::load_all(".")
??cellkeyperturbation
library(cellkeyperturbation)
??cellkeyperturbation
?cellkeyperturbation
library(cellkeyperturbation)
?cellkeyperturbation
library(devtools)
install()
library(cellkeyperturbation)
?cellkeyperturbation
??cellkeyperturbation
??cellkeyperturbation
help(cellkeyperturbation)
document()
check()
install()
library(cellkeyperturbation)
help(cellkeyperturbation)
??cellkeyperturbation
library(cellkeyperturbation)
help(cellkeyperturbation)
??cellkeyperturbation
??cellkeyperturbation
?cellkeyperturbation
devtools::document("cellkeyperturbation")
?create_perturbed_table
help("create_perturbed_table")
devtools::load_all(".")
library(cellkeyperturbation)
rm cellkeyperturbation
remove.packages("cellkeyperturbation")
install.packages("C:/My_RStudio/Workspace/cellkeyperturbation_0.0.0.9000.tar.gz", repos=NULL)
help(package="cellkeyperturbation")
libraray(devtools)
library(devtools)
use_vignette("intro_to_cellkeyperturbation", title="Introduction to cellkeyperturbation")
help(package="dplyr")
library(cellkeyperturbation)
detach("package:cellkeyperturbation", unload = TRUE)
install.packages("C:/My_RStudio/Workspace/cellkeyperturbation_0.0.0.9000.tar.gz", repos=NULL)
library(cellkeyperturbation)
help(package="cellkeyperturbation")
help(package="dplyr")
help(package="data.table")
help(micro)
detach("package:cellkeyperturbation", unload = TRUE)
library(cellkeyperturbation)
install.packages("C:/My_RStudio/Workspace/cellkeyperturbation_0.0.0.9000.tar.gz", repos=NULL)
library(cellkeyperturbation)
help(package="cellkeyperturbation")
detach("package:cellkeyperturbation", unload = TRUE)
install.packages("C:/My_RStudio/Workspace/cellkeyperturbation_0.0.0.9000.tar.gz", repos=NULL)
library(cellkeyperturbation)
help(package="cellkeyperturbation")
library(cellkeyperturbation)
detach("package:cellkeyperturbation", unload = TRUE)
library(cellkeyperturbation)
library(cellkeyperturbation)
install.packages("C:/My_RStudio/Workspace/cellkeyperturbation_0.0.0.9000.tar.gz", repos=NULL)
library(cellkeyperturbation)
help(package="cellkeyperturbation")
devtools::load_all(".")
help(package="cellkeyperturbation")
library(cellkeyperturbation)
detach("package:cellkeyperturbation", unload = TRUE)
install.packages("C:/My_RStudio/Workspace/cellkeyperturbation_0.0.0.9000.tar.gz", repos=NULL)
library(cellkeyperturbation)
help(package="cellkeyperturbation")
help(package="cellkeyperturbation")
help(micro)
devtools::load_all(".")
help(micro)
library(testthat)
devtools::load_all(".")
library(cellkeyperturbation)
help(micro)
micro
load(micro)
help(micro)
data(micro)
force(micro)
View(micro)
rm micro
expected_result <- fread("perturbed_table_var1_var5_var8.csv")
expected_result <- fread("tests/testthat/perturbed_table_var1_var5_var8.csv")
library(data.table)
expected_result <- fread("tests/testthat/perturbed_table_var1_var5_var8.csv")
saveRDS(expected_result, file="tests/testthat/expected_result.rds")
saveRDS(expected_result, file="tests/testthat/perturbed_table_var1_var5_var8.rds")
devtools::load_all(".")
library(cellkeyperturbation)
library(cellkeyperturbation)
devtools::load_all(".")
help(ptable_10_5)
load(testthat)
library(testthat)
data(micro)
checkDT(micro)
library(data.table)
checkDT(micro)
data.table::checkDT(micro)
is.data.table(micro)
help(create_perturbed+table)
help(create_perturbed_table)
is.vector(c("var1"))
is.vector(3)
is.vector(FALSE)
is.vector(micro)
is.character(7)
library(cellkeyperturbation)
length(c())
library(cellkeyperturbation)
is.vector(c())
help(create_perturbed_table)
devtools::load_all(".")
help(create_perturbed_table)
devtools::load_all(".")
help(create_perturbed_table)
devtools::load_all(".")
help(create_perturbed_table)
devtools::load_all(".")
help(create_perturbed_table)
length(c())
geog <- c()
length(geog)
is.character(geog)
length(geog)>1 & !is.character(geog)
geog <- c("var1")
length(geog)>1 & !is.character(geog)
geog <- c(7)
length(geog)>1 & !is.character(geog)
length(geog)>0 & !is.character(geog)
length(micro)
geog <- c(3,"tab")
length(geog)>0 & !is.character(geog)
is.character(geog)
colnames(micro)
geog <- c("var1")
geog %in% colnames(micro)
devtools::load_all(".")
help(create_perturbed_table)
tab_vars <- c("var1"."var2")
tab_vars <- c("var1","var2")
tab_vars %in% colnames(micro)
tab_vars <- c("var1","var")
tab_vars %in% colnames(micro)
if (!(tab_vars %in% colnames(data_table))){
print("prob")
}
if (!(tab_vars %in% colnames(micro))){
print("prob")
}
if (! all(tab_vars %in% colnames(micro))){
print("prob")
}
tab_vars <- c("var1","var2")
if (! all(tab_vars %in% colnames(micro))){
print("prob")
}
help(ptable_10_5)
all(c("pcv","ckey","ckey") %in% colnames(ptable_10_5))
all(c("pcv","ckey","cke") %in% colnames(ptable_10_5))
library(cellkeyperturbation)
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
help(ptable_10_5)
expected_result <- fread("../perturbed_table_var1_var5_var8.csv")
save(expected_result, file = "perturbed_table_var1_var5_var8.rda")
save(expected_result, file = "tests/testthat/perturbed_table_var1_var5_var8.rda")
load(file = "perturbed_table_var1_var5_var8.rda")
load(file = "tests/testthat/perturbed_table_var1_var5_var8.rda")
devtools::load_all(".")
library(cellkeyperturbation)
devtools::load_all(".")
library(cellkeyperturbation)
perturbed_table <-create_perturbed_table(data = micro,geog = c(), tab_vars = c("var1","var5","var8"),ptable = ptable_10_5)
perturbed_table <-create_perturbed_table(data = micro,geog = c(), tab_vars = c("var1","var5","var8"),ptable = ptable_10_5)
perturbed_table <-create_perturbed_table(data = micro,geog = c(), tab_vars = c("var1","var5","var8"),ptable = ptable_10_5)
devtools::load_all(".")
perturbed_table <-create_perturbed_table(data = micro,geog = c(), tab_vars = c("var1","var5","var8"),ptable = ptable_10_5)
perturbed_table <-create_perturbed_table(data = micro,record_key = "record_key",geog = c(), tab_vars = c("var1","var5","var8"),ptable = ptable_10_5)
View(perturbed_table)
library(cellkeyperturbation)
library(cellkeyperturbation)
perturbed_table <-create_perturbed_table(data = micro,record_key = "record_key",geog = c(), tab_vars = c("var3","var4","var7"),ptable = ptable_10_5)
View(perturbed_table)
View(perturbed_table)
help(micro)
perturbed_table <-create_perturbed_table(data = micro,record_key = "record_key",geog = c("var10"), tab_vars = c("var3","var4"),ptable = ptable_10_5)
perturbed_table <-create_perturbed_table(data = micro,record_key = "record_key",geog = c("var10"), tab_vars = c("var5"),ptable = ptable_10_5)
perturbed_table <-create_perturbed_table(data = micro,record_key = "record_key",geog = c("var9"), tab_vars = c("var1"),ptable = ptable_10_5)
library(cellkeyperturbation)
devtools::load_all(".")
library(cellkeyperturbation)
